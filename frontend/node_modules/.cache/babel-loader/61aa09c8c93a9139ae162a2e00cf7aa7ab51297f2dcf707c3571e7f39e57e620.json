{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wahee\\\\Documents\\\\DB Project\\\\frontend\\\\src\\\\components\\\\RegisterCourses.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisterCourse() {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const rollNo = state === null || state === void 0 ? void 0 : state.rollNo;\n  const [courses, setCourses] = useState([]);\n  const [selected, setSelected] = useState([]);\n\n  // Fetch courses on component load\n  useEffect(() => {\n    const fetchCourses = async () => {\n      const response = await fetch(`http://localhost:5000/courses/${rollNo}`);\n      const data = await response.json();\n      setCourses(data);\n    };\n    if (rollNo) fetchCourses();\n  }, [rollNo]);\n\n  // Handle checkbox state change\n  const handleCheckboxChange = (e, teacherCourseCode) => {\n    if (e.target.checked) {\n      setSelected([...selected, teacherCourseCode]);\n    } else {\n      setSelected(selected.filter(code => code !== teacherCourseCode));\n    }\n  };\n\n  // Handle enrollment when the button is clicked\n  const handleEnroll = async () => {\n    try {\n      // Make the API call to enroll the student in the selected courses\n      for (const courseCode of selected) {\n        const response = await fetch('http://localhost:5000/enroll', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            roll_no: rollNo,\n            teacher_course_code: courseCode\n          })\n        });\n        const data = await response.json();\n        console.log('Enrolled:', data);\n      }\n\n      // Optionally, clear selected courses after enrollment\n      setSelected([]);\n    } catch (error) {\n      console.error('Error enrolling:', error);\n    }\n  };\n\n  // If no courses are found, display a message\n  if (courses.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No courses found for your semester.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 36\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Courses for Your Semester\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Course Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Course Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Credit Hours\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Teacher\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Available Seats\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: courses.map(course => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: course.course_code\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: course.course_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: course.course_type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: course.credit_hours\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [course.teacher_first_name, \" \", course.teacher_last_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: course.available_seats\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selected.includes(course.teacher_course_code),\n              onChange: e => handleCheckboxChange(e, course.teacher_course_code),\n              disabled: course.available_seats <= 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, course.teacher_course_code, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEnroll,\n      disabled: selected.length === 0,\n      children: \"Enroll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisterCourse, \"RpkbLvOhNJI3ISqkGlFyg2gchRw=\", false, function () {\n  return [useLocation];\n});\n_c = RegisterCourse;\nexport default RegisterCourse;\nvar _c;\n$RefreshReg$(_c, \"RegisterCourse\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","jsxDEV","_jsxDEV","RegisterCourse","_s","state","rollNo","courses","setCourses","selected","setSelected","fetchCourses","response","fetch","data","json","handleCheckboxChange","e","teacherCourseCode","target","checked","filter","code","handleEnroll","courseCode","method","headers","body","JSON","stringify","roll_no","teacher_course_code","console","log","error","length","children","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","map","course","course_code","course_name","course_type","credit_hours","teacher_first_name","teacher_last_name","available_seats","type","includes","onChange","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/wahee/Documents/DB Project/frontend/src/components/RegisterCourses.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nfunction RegisterCourse() {\r\n  const { state } = useLocation();\r\n  const rollNo = state?.rollNo;\r\n  const [courses, setCourses] = useState([]);\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  // Fetch courses on component load\r\n  useEffect(() => {\r\n    const fetchCourses = async () => {\r\n      const response = await fetch(`http://localhost:5000/courses/${rollNo}`);\r\n      const data = await response.json();\r\n      setCourses(data);\r\n    };\r\n\r\n    if (rollNo) fetchCourses();\r\n  }, [rollNo]);\r\n\r\n  // Handle checkbox state change\r\n  const handleCheckboxChange = (e, teacherCourseCode) => {\r\n    if (e.target.checked) {\r\n      setSelected([...selected, teacherCourseCode]);\r\n    } else {\r\n      setSelected(selected.filter(code => code !== teacherCourseCode));\r\n    }\r\n  };\r\n\r\n  // Handle enrollment when the button is clicked\r\n  const handleEnroll = async () => {\r\n    try {\r\n      // Make the API call to enroll the student in the selected courses\r\n      for (const courseCode of selected) {\r\n        const response = await fetch('http://localhost:5000/enroll', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            roll_no: rollNo,\r\n            teacher_course_code: courseCode,\r\n          }),\r\n        });\r\n\r\n        const data = await response.json();\r\n        console.log('Enrolled:', data);\r\n      }\r\n\r\n      // Optionally, clear selected courses after enrollment\r\n      setSelected([]);\r\n    } catch (error) {\r\n      console.error('Error enrolling:', error);\r\n    }\r\n  };\r\n\r\n  // If no courses are found, display a message\r\n  if (courses.length === 0) return <p>No courses found for your semester.</p>;\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <h2>Courses for Your Semester</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Course Code</th>\r\n            <th>Course Name</th>\r\n            <th>Type</th>\r\n            <th>Credit Hours</th>\r\n            <th>Teacher</th>\r\n            <th>Available Seats</th>\r\n            <th>Select</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {courses.map(course => (\r\n            <tr key={course.teacher_course_code}>\r\n              <td>{course.course_code}</td>\r\n              <td>{course.course_name}</td>\r\n              <td>{course.course_type}</td>\r\n              <td>{course.credit_hours}</td>\r\n              <td>{course.teacher_first_name} {course.teacher_last_name}</td>\r\n              <td>{course.available_seats}</td>\r\n              <td>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={selected.includes(course.teacher_course_code)}\r\n                  onChange={(e) => handleCheckboxChange(e, course.teacher_course_code)}\r\n                  disabled={course.available_seats <= 0}\r\n                />\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <button onClick={handleEnroll} disabled={selected.length === 0}>\r\n        Enroll\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterCourse;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}