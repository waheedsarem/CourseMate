{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wahee\\\\Documents\\\\DB Project\\\\frontend\\\\src\\\\components\\\\SwapSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './SwapSection.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SwapSection() {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const rollNo = state === null || state === void 0 ? void 0 : state.rollNo;\n\n  // State declarations\n  const [pendingRequest, setPendingRequest] = useState([]);\n  const [currentEnrol, setCurrentEnrol] = useState([]);\n  const [availableSections, setAvailableSections] = useState([]);\n  const [selectedForDrop, setSelectedForDrop] = useState(\"\");\n  const [selectedForAdd, setSelectedForAdd] = useState(\"\");\n  const [errorNoDrop, setErrorNoDrop] = useState(\"\");\n  const [errorNoAdd, setErrorNoAdd] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const enterSwapperEntry = async () => {\n      try {\n        const response0 = await fetch('http://localhost:5000/SwapSection/LodgeRequest', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            roll_no: rollNo,\n            course_add: selectedForAdd,\n            course_drop: selectedForDrop\n          })\n        });\n        const data0 = await response0.json();\n        if (!response0.ok) {\n          console.log(\"❌ Error: \", data0.error || \"Unknown error\");\n        }\n      } catch (err) {\n        console.error(\"❌ Fetch failed:\", err);\n      }\n    };\n    if (selectedForDrop === \"\") {\n      setErrorNoDrop(\"You need to select a course to Drop\");\n    } else {\n      setErrorNoDrop(\"\");\n    }\n    if (selectedForAdd === \"\") {\n      setErrorNoAdd(\"You need to select a course to add\");\n    } else {\n      setErrorNoAdd(\"\");\n    }\n    if (selectedForDrop && selectedForAdd) {\n      enterSwapperEntry();\n    }\n  };\n  useEffect(() => {\n    const fetchPendingRequests = async () => {\n      try {\n        const response1 = await fetch('http://localhost:5000/SwapSection/Pending', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            roll_no: rollNo\n          })\n        });\n        const data1 = await response1.json();\n        if (!response1.ok) {\n          console.log(\"❌ Error: \", data1.error || \"Unknown error\");\n        } else {\n          setPendingRequest(data1);\n          console.log(\"✅ Fetched pending Requests:\", data1);\n        }\n      } catch (err) {\n        console.error(\"❌ Fetch failed:\", err);\n      }\n      try {\n        const response2 = await fetch('http://localhost:5000/SwapSection/Enrollments', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            roll_no: rollNo\n          })\n        });\n        const data2 = await response2.json();\n        if (!response2.ok) {\n          console.log(\"❌ Error: \", data2.error || \"Unknown error\");\n        } else {\n          setCurrentEnrol(data2);\n          console.log(\"✅ Fetched Current Enrollment:\", data2);\n        }\n      } catch (err) {\n        console.error(\"❌ Fetch failed:\", err);\n      }\n      try {\n        const response3 = await fetch('http://localhost:5000/SwapSection/Available', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            roll_no: rollNo\n          })\n        });\n        const data3 = await response3.json();\n        if (!response3.ok) {\n          console.log(\"❌ Error: \", data3.error || \"Unknown error\");\n        } else {\n          setAvailableSections(data3);\n          console.log(\"✅ Fetched Available Sections:\", data3);\n        }\n      } catch (err) {\n        console.error(\"❌ Fetch failed:\", err);\n      }\n    };\n    if (rollNo) {\n      fetchPendingRequests();\n    }\n  }, [rollNo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Swap-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"Swap-header\",\n      children: \"Swap Section\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Swapping sections for: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: rollNo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), pendingRequest.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"Swap-subheader\",\n        children: \"Your Pending Swap Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"Swap-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"SR#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Course to Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Course to Drop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: pendingRequest.map((row, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: idx + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.courseToBeAdded\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.courseToBeDropped\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 19\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"No-requests\",\n      children: \"You have no current swap requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"Swap-subheader\",\n      children: \"Your Current Enrollments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"Swap-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Select to Drop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Section\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Teacher Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Course ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: currentEnrol.map((row, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"Radio-input\",\n              type: \"radio\",\n              onChange: () => setSelectedForDrop(row.teacherCourseCode),\n              name: \"dropCourse\",\n              checked: selectedForDrop === row.teacherCourseCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.teacherCourseCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.teacherName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.courseCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), errorNoDrop && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Error-message\",\n      children: errorNoDrop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"Swap-subheader\",\n      children: \"Available Courses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"Swap-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Select to Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Section\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Teacher Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Course ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: availableSections.map((row, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"Radio-input\",\n              type: \"radio\",\n              onChange: () => setSelectedForAdd(row.teacherCourseCode),\n              name: \"addCourse\",\n              checked: selectedForAdd === row.teacherCourseCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.teacherCourseCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.teacherName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.courseCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), errorNoAdd && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Error-message\",\n      children: errorNoAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Swap-button\",\n      onClick: handleSubmit,\n      children: \"Initiate Swap Request\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n_s(SwapSection, \"ZmR9rYWQYnLpCFWp9yQTMbDkwZQ=\", false, function () {\n  return [useLocation];\n});\n_c = SwapSection;\nexport default SwapSection;\nvar _c;\n$RefreshReg$(_c, \"SwapSection\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","SwapSection","_s","state","rollNo","pendingRequest","setPendingRequest","currentEnrol","setCurrentEnrol","availableSections","setAvailableSections","selectedForDrop","setSelectedForDrop","selectedForAdd","setSelectedForAdd","errorNoDrop","setErrorNoDrop","errorNoAdd","setErrorNoAdd","handleSubmit","e","preventDefault","enterSwapperEntry","response0","fetch","method","headers","body","JSON","stringify","roll_no","course_add","course_drop","data0","json","ok","console","log","error","err","fetchPendingRequests","response1","data1","response2","data2","response3","data3","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","row","idx","courseToBeAdded","courseToBeDropped","type","onChange","teacherCourseCode","name","checked","teacherName","courseCode","onClick","_c","$RefreshReg$"],"sources":["C:/Users/wahee/Documents/DB Project/frontend/src/components/SwapSection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './SwapSection.css';\r\n\r\nfunction SwapSection() {\r\n  const { state } = useLocation();\r\n  const rollNo = state?.rollNo;\r\n  \r\n  // State declarations\r\n  const [pendingRequest, setPendingRequest] = useState([]);\r\n  const [currentEnrol, setCurrentEnrol] = useState([]);\r\n  const [availableSections, setAvailableSections] = useState([]);\r\n  const [selectedForDrop, setSelectedForDrop] = useState(\"\");\r\n  const [selectedForAdd, setSelectedForAdd] = useState(\"\");\r\n  const [errorNoDrop, setErrorNoDrop] = useState(\"\");\r\n  const [errorNoAdd, setErrorNoAdd] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    const enterSwapperEntry = async () => {\r\n      try {\r\n        const response0 = await fetch('http://localhost:5000/SwapSection/LodgeRequest', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ \r\n            roll_no: rollNo, \r\n            course_add: selectedForAdd,\r\n            course_drop: selectedForDrop \r\n          }),\r\n        });\r\n\r\n        const data0 = await response0.json();\r\n\r\n        if (!response0.ok) {\r\n          console.log(\"❌ Error: \", data0.error || \"Unknown error\");\r\n        } \r\n      } catch (err) {\r\n        console.error(\"❌ Fetch failed:\", err);\r\n      }\r\n    }\r\n\r\n    if (selectedForDrop === \"\") {\r\n      setErrorNoDrop(\"You need to select a course to Drop\");\r\n    } else {\r\n      setErrorNoDrop(\"\");\r\n    }\r\n\r\n    if (selectedForAdd === \"\") {\r\n      setErrorNoAdd(\"You need to select a course to add\");\r\n    } else {\r\n      setErrorNoAdd(\"\");\r\n    }\r\n\r\n    if (selectedForDrop && selectedForAdd) {\r\n      enterSwapperEntry();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchPendingRequests = async () => {\r\n      try {\r\n        const response1 = await fetch('http://localhost:5000/SwapSection/Pending', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ roll_no: rollNo }),\r\n        });\r\n\r\n        const data1 = await response1.json();\r\n\r\n        if (!response1.ok) {\r\n          console.log(\"❌ Error: \", data1.error || \"Unknown error\");\r\n        } else {\r\n          setPendingRequest(data1);\r\n          console.log(\"✅ Fetched pending Requests:\", data1);\r\n        }\r\n      } catch (err) {\r\n        console.error(\"❌ Fetch failed:\", err);\r\n      }\r\n\r\n      try {\r\n        const response2 = await fetch('http://localhost:5000/SwapSection/Enrollments', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ roll_no: rollNo }),\r\n        });\r\n\r\n        const data2 = await response2.json();\r\n\r\n        if (!response2.ok) {\r\n          console.log(\"❌ Error: \", data2.error || \"Unknown error\");\r\n        } else {\r\n          setCurrentEnrol(data2);\r\n          console.log(\"✅ Fetched Current Enrollment:\", data2);\r\n        }\r\n      } catch (err) {\r\n        console.error(\"❌ Fetch failed:\", err);\r\n      }\r\n\r\n      try {\r\n        const response3 = await fetch('http://localhost:5000/SwapSection/Available', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ roll_no: rollNo }),\r\n        });\r\n\r\n        const data3 = await response3.json();\r\n\r\n        if (!response3.ok) {\r\n          console.log(\"❌ Error: \", data3.error || \"Unknown error\");\r\n        } else {\r\n          setAvailableSections(data3);\r\n          console.log(\"✅ Fetched Available Sections:\", data3);\r\n        }\r\n      } catch (err) {\r\n        console.error(\"❌ Fetch failed:\", err);\r\n      }\r\n    };\r\n\r\n    if (rollNo) {\r\n      fetchPendingRequests();\r\n    }\r\n  }, [rollNo]);\r\n\r\n  return (\r\n    <div className=\"Swap-container\">\r\n      <h2 className=\"Swap-header\">Swap Section</h2>\r\n      <p>Swapping sections for: <strong>{rollNo}</strong></p>\r\n      \r\n      {pendingRequest.length > 0 ? (\r\n        <>\r\n          <h3 className=\"Swap-subheader\">Your Pending Swap Requests</h3>\r\n          <table className=\"Swap-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>SR#</th>\r\n                <th>Course to Add</th>\r\n                <th>Course to Drop</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {pendingRequest.map((row, idx) => (\r\n                <tr key={idx}>          \r\n                  <td>{idx + 1}</td>\r\n                  <td>{row.courseToBeAdded}</td>\r\n                  <td>{row.courseToBeDropped}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </>\r\n      ) : (\r\n        <p className=\"No-requests\">You have no current swap requests</p>\r\n      )}\r\n\r\n      <h3 className=\"Swap-subheader\">Your Current Enrollments</h3>\r\n      <table className=\"Swap-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Select to Drop</th>\r\n            <th>Section</th>\r\n            <th>Teacher Name</th>\r\n            <th>Course ID</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currentEnrol.map((row, idx) => (\r\n            <tr key={idx}>\r\n              <td>\r\n                <input \r\n                  className=\"Radio-input\" \r\n                  type=\"radio\" \r\n                  onChange={() => setSelectedForDrop(row.teacherCourseCode)}\r\n                  name=\"dropCourse\" \r\n                  checked={selectedForDrop === row.teacherCourseCode}\r\n                />\r\n              </td>\r\n              <td>{row.teacherCourseCode}</td>\r\n              <td>{row.teacherName}</td>\r\n              <td>{row.courseCode}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {errorNoDrop && <div className=\"Error-message\">{errorNoDrop}</div>}\r\n\r\n      <h3 className=\"Swap-subheader\">Available Courses</h3>\r\n      <table className=\"Swap-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Select to Add</th>\r\n            <th>Section</th>\r\n            <th>Teacher Name</th>\r\n            <th>Course ID</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {availableSections.map((row, idx) => (\r\n            <tr key={idx}>\r\n              <td>\r\n                <input \r\n                  className=\"Radio-input\" \r\n                  type=\"radio\" \r\n                  onChange={() => setSelectedForAdd(row.teacherCourseCode)}\r\n                  name=\"addCourse\" \r\n                  checked={selectedForAdd === row.teacherCourseCode}\r\n                />\r\n              </td>\r\n              <td>{row.teacherCourseCode}</td>\r\n              <td>{row.teacherName}</td>\r\n              <td>{row.courseCode}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {errorNoAdd && <div className=\"Error-message\">{errorNoAdd}</div>}\r\n\r\n      <button className=\"Swap-button\" onClick={handleSubmit}>\r\n        Initiate Swap Request\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SwapSection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}