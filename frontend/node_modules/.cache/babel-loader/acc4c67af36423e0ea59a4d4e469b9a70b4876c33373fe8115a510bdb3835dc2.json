{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wahee\\\\Documents\\\\DB Project\\\\frontend\\\\src\\\\components\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPassword() {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const navigate = useNavigate();\n  const rollNo = state === null || state === void 0 ? void 0 : state.rollNo;\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (newPassword !== confirmNewPassword) {\n      setError(\"New passwords do not match.\");\n      return;\n    }\n    const response = await fetch('http://localhost:5000/reset-password', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        roll_no: rollNo,\n        old_password: oldPassword,\n        new_password: newPassword\n      })\n    });\n    const data = await response.json();\n    if (response.ok) {\n      setMessage('Password updated successfully!');\n      setError('');\n    } else {\n      setError(data.error || 'Failed to update password');\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '50px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"oldPassword\",\n          children: \"Old Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"oldPassword\",\n          value: oldPassword,\n          onChange: e => setOldPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"newPassword\",\n          children: \"New Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"newPassword\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmNewPassword\",\n          children: \"Confirm New Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmNewPassword\",\n          value: confirmNewPassword,\n          onChange: e => setConfirmNewPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"/RR9waITmLYkI7IU0ykMst4tXrU=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","jsxDEV","_jsxDEV","ResetPassword","_s","state","navigate","rollNo","oldPassword","setOldPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","error","setError","message","setMessage","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","roll_no","old_password","new_password","data","json","ok","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","color","_c","$RefreshReg$"],"sources":["C:/Users/wahee/Documents/DB Project/frontend/src/components/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nfunction ResetPassword() {\r\n  const { state } = useLocation();\r\n  const navigate = useNavigate();\r\n  const rollNo = state?.rollNo;\r\n  \r\n  const [oldPassword, setOldPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (newPassword !== confirmNewPassword) {\r\n      setError(\"New passwords do not match.\");\r\n      return;\r\n    }\r\n\r\n    const response = await fetch('http://localhost:5000/reset-password', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ roll_no: rollNo, old_password: oldPassword, new_password: newPassword }),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (response.ok) {\r\n      setMessage('Password updated successfully!');\r\n      setError('');\r\n    } else {\r\n      setError(data.error || 'Failed to update password');\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', marginTop: '50px' }}>\r\n      <h1>Reset Password</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"oldPassword\">Old Password: </label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"oldPassword\"\r\n            value={oldPassword}\r\n            onChange={(e) => setOldPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"newPassword\">New Password: </label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"newPassword\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"confirmNewPassword\">Confirm New Password: </label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"confirmNewPassword\"\r\n            value={confirmNewPassword}\r\n            onChange={(e) => setConfirmNewPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Reset Password</button>\r\n      </form>\r\n      {message && <p>{message}</p>}\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}