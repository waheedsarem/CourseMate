{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wahee\\\\Documents\\\\DB Project\\\\frontend\\\\src\\\\components\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport './ResetPassword.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPassword() {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const navigate = useNavigate();\n  const rollNo = state === null || state === void 0 ? void 0 : state.rollNo;\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (newPassword !== confirmNewPassword) {\n      setError(\"New passwords do not match.\");\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/reset-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          roll_no: rollNo,\n          old_password: oldPassword,\n          new_password: newPassword\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessage('Password updated successfully!');\n        setError('');\n        setTimeout(() => navigate('/dashboard', {\n          state: {\n            rollNo\n          }\n        }), 2000);\n      } else {\n        setError(data.error || 'Failed to update password');\n        setMessage('');\n      }\n    } catch (err) {\n      setError('Network error. Please try again.');\n      console.error('Password reset error:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reset-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"reset-header\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"reset-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"oldPassword\",\n            children: \"Old Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"oldPassword\",\n            value: oldPassword,\n            onChange: e => setOldPassword(e.target.value),\n            required: true,\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newPassword\",\n            children: \"New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"newPassword\",\n            value: newPassword,\n            onChange: e => setNewPassword(e.target.value),\n            required: true,\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmNewPassword\",\n            children: \"Confirm New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirmNewPassword\",\n            value: confirmNewPassword,\n            onChange: e => setConfirmNewPassword(e.target.value),\n            required: true,\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"reset-button\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"/RR9waITmLYkI7IU0ykMst4tXrU=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","jsxDEV","_jsxDEV","ResetPassword","_s","state","navigate","rollNo","oldPassword","setOldPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","error","setError","message","setMessage","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","roll_no","old_password","new_password","data","json","ok","setTimeout","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/wahee/Documents/DB Project/frontend/src/components/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport './ResetPassword.css';\r\n\r\nfunction ResetPassword() {\r\n  const { state } = useLocation();\r\n  const navigate = useNavigate();\r\n  const rollNo = state?.rollNo;\r\n  \r\n  const [oldPassword, setOldPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (newPassword !== confirmNewPassword) {\r\n      setError(\"New passwords do not match.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/reset-password', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ \r\n          roll_no: rollNo, \r\n          old_password: oldPassword, \r\n          new_password: newPassword \r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setMessage('Password updated successfully!');\r\n        setError('');\r\n        setTimeout(() => navigate('/dashboard', { state: { rollNo } }), 2000);\r\n      } else {\r\n        setError(data.error || 'Failed to update password');\r\n        setMessage('');\r\n      }\r\n    } catch (err) {\r\n      setError('Network error. Please try again.');\r\n      console.error('Password reset error:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"reset-container\">\r\n      <div className=\"reset-card\">\r\n        <h1 className=\"reset-header\">Reset Password</h1>\r\n        <form onSubmit={handleSubmit} className=\"reset-form\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"oldPassword\">Old Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"oldPassword\"\r\n              value={oldPassword}\r\n              onChange={(e) => setOldPassword(e.target.value)}\r\n              required\r\n              className=\"form-input\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"newPassword\">New Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"newPassword\"\r\n              value={newPassword}\r\n              onChange={(e) => setNewPassword(e.target.value)}\r\n              required\r\n              className=\"form-input\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"confirmNewPassword\">Confirm New Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"confirmNewPassword\"\r\n              value={confirmNewPassword}\r\n              onChange={(e) => setConfirmNewPassword(e.target.value)}\r\n              required\r\n              className=\"form-input\"\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"reset-button\">\r\n            Reset Password\r\n          </button>\r\n        </form>\r\n        {message && <p className=\"success-message\">{message}</p>}\r\n        {error && <p className=\"error-message\">{error}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}