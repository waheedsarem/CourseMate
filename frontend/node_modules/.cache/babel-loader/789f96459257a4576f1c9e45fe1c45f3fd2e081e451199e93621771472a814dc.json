{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wahee\\\\Documents\\\\DB Project\\\\frontend\\\\src\\\\components\\\\ChangeGrade.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChangeGrade = () => {\n  _s();\n  const [operation, setOperation] = useState(\"\"); // \"add\", \"delete\", \"update\"\n  const [formData, setFormData] = useState({\n    courseCode: \"\",\n    rollNumber: \"\",\n    grade: \"\"\n  });\n  const handleChange = e => {\n    setFormData(prev => ({\n      ...prev,\n      [e.target.name]: e.target.value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (operation === \"add\") {\n      try {\n        const response = await fetch('http://localhost:5000/changegrade/add', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            courseCode: formData.courseCode,\n            rollNumber: formData.rollNumber,\n            grade: formData.grade\n          })\n        });\n        if (response.ok) {\n          alert(\"grade entry added successfully.\");\n          //setSelectedCourses([]);\n          setTimeout(() => window.location.reload(), 1500); // Optional: reload to sync state\n        }\n      } catch (err) {\n        console.error(\"❌ Fetch failed:\", err);\n      }\n      // call add API\n      console.log(\"Add grade:\", formData);\n    } else if (operation === \"delete\") {\n      // call delete API\n      try {\n        const response = await fetch('http://localhost:5000/changegrade/delete', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            courseCode: formData.courseCode,\n            rollNumber: formData.rollNumber,\n            grade: formData.grade\n          })\n        });\n        if (response.ok) {\n          alert(\"Grade deleted successfully.\");\n          //setSelectedCourses([]);\n          setTimeout(() => window.location.reload(), 1500); // Optional: reload to sync state\n        }\n      } catch (err) {\n        console.error(\"❌ Fetch failed:\", err);\n      }\n      console.log(\"Delete grade:\", formData.courseCode);\n    } else if (operation === \"update\") {\n      try {\n        const response = await fetch('http://localhost:5000/changegrade/update', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            courseCode: formData.courseCode,\n            rollNumber: formData.rollNumber,\n            grade: formData.grade\n          })\n        });\n        if (response.ok) {\n          alert(\"grade updated successfully.\");\n          //setSelectedCourses([]);\n          setTimeout(() => window.location.reload(), 1500); // Optional: reload to sync state\n        }\n      } catch (err) {\n        console.error(\"❌ Fetch failed:\", err);\n      }\n      // call update API\n      console.log(\"Update grade:\", formData);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Grade/Transcript Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '10px',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setOperation(\"add\"),\n        children: \"Add Grade Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setOperation(\"delete\"),\n        children: \"Delete Grade Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setOperation(\"update\"),\n        children: \"Update Grade Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), operation && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '10px',\n        maxWidth: '400px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Course:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"courseCode\",\n          value: formData.courseCode,\n          onChange: handleChange\n          // required\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Roll Number:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"rollNumber\",\n          value: formData.rollNumber,\n          onChange: handleChange\n          //   required\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), (operation === \"add\" || operation === \"update\") && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Grade:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"grade\",\n            value: formData.grade,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: [operation === \"add\" && \"Add Grade Entry\", operation === \"delete\" && \"Delete Grade Entry\", operation === \"update\" && \"Update Grade Entry\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 7\n  }, this);\n};\n_s(ChangeGrade, \"q0Whvot1CiFLPjcYVX27ymiajQQ=\");\n_c = ChangeGrade;\nexport default ChangeGrade;\nvar _c;\n$RefreshReg$(_c, \"ChangeGrade\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ChangeGrade","_s","operation","setOperation","formData","setFormData","courseCode","rollNumber","grade","handleChange","e","prev","target","name","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","alert","setTimeout","window","location","reload","err","console","error","log","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","marginBottom","onClick","onSubmit","flexDirection","maxWidth","type","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/wahee/Documents/DB Project/frontend/src/components/ChangeGrade.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom'\n\nconst ChangeGrade = () => {\n    const [operation, setOperation] = useState(\"\"); // \"add\", \"delete\", \"update\"\n    const [formData, setFormData] = useState({\n      courseCode: \"\",\n      rollNumber:\"\",\n      grade: \"\"\n    });\n  \n    const handleChange = (e) => {\n      setFormData(prev => ({\n        ...prev,\n        [e.target.name]: e.target.value\n      }));\n    };\n  \n    const handleSubmit = async (e) => {\n      e.preventDefault();\n      if (operation === \"add\") {\n                try {\n                  const response = await fetch('http://localhost:5000/changegrade/add', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({   courseCode: formData.courseCode,\n                        rollNumber:formData.rollNumber,\n                        grade: formData.grade }),\n                  });\n          \n                  if (response.ok) {\n                    alert(\"grade entry added successfully.\");\n                    //setSelectedCourses([]);\n                    setTimeout(() => window.location.reload(), 1500); // Optional: reload to sync state\n                  }\n                } catch (err) {\n                  console.error(\"❌ Fetch failed:\", err);\n                }\n        // call add API\n        console.log(\"Add grade:\", formData);\n      } else if (operation === \"delete\") {\n        // call delete API\n        try {\n          const response = await fetch('http://localhost:5000/changegrade/delete', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({  courseCode: formData.courseCode,\n                rollNumber:formData.rollNumber,\n                grade: formData.grade }),\n          });\n  \n          if (response.ok) {\n            alert(\"Grade deleted successfully.\");\n            //setSelectedCourses([]);\n            setTimeout(() => window.location.reload(), 1500); // Optional: reload to sync state\n          }\n        } catch (err) {\n          console.error(\"❌ Fetch failed:\", err);\n        }\n        console.log(\"Delete grade:\", formData.courseCode);\n      } else if (operation === \"update\") {\n        try {\n          const response = await fetch('http://localhost:5000/changegrade/update', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({  courseCode: formData.courseCode,\n                rollNumber:formData.rollNumber,\n                grade: formData.grade }),\n          });\n  \n          if (response.ok) {\n            alert(\"grade updated successfully.\");\n            //setSelectedCourses([]);\n            setTimeout(() => window.location.reload(), 1500); // Optional: reload to sync state\n          }\n        } catch (err) {\n          console.error(\"❌ Fetch failed:\", err);\n        }\n        // call update API\n        console.log(\"Update grade:\", formData);\n      }\n    };\n  \n    return (\n      <div style={{ padding: '20px' }}>\n        <h2>Grade/Transcript Management</h2>\n        <div style={{ display: 'flex', gap: '10px', marginBottom: '20px' }}>\n          <button onClick={() => setOperation(\"add\")}>Add Grade Entry</button>\n          <button onClick={() => setOperation(\"delete\")}>Delete Grade Entry</button>\n          <button onClick={() => setOperation(\"update\")}>Update Grade Entry</button>\n        </div>\n  \n        {operation && (\n          <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column', gap: '10px', maxWidth: '400px' }}>\n            <label>\n              Course:\n              <input\n                type=\"text\"\n                name=\"courseCode\"\n                value={formData.courseCode}\n                onChange={handleChange}\n               // required\n              />\n            </label>\n            <label>\n                  Roll Number:\n                  <input\n                    type=\"text\"\n                    name=\"rollNumber\"\n                    value={formData.rollNumber}\n                    onChange={handleChange}\n                 //   required\n                  />\n                </label>\n  \n            {(operation === \"add\" || operation === \"update\") && (\n              <>\n                   \n                <label>\n                  Grade:\n                  <input\n                    type=\"text\"\n                    name=\"grade\"\n                    value={formData.grade}\n                    onChange={handleChange}\n                    required\n                  />\n                </label>\n               \n              </>\n            )}\n  \n            <button type=\"submit\">\n              {operation === \"add\" && \"Add Grade Entry\"}\n              {operation === \"delete\" && \"Delete Grade Entry\"}\n              {operation === \"update\" && \"Update Grade Entry\"}\n            </button>\n          </form>\n        )}\n      </div>\n    );\n  \n  \n  }\n  \n    \n\nexport default ChangeGrade"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3D,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC;IACvCa,UAAU,EAAE,EAAE;IACdC,UAAU,EAAC,EAAE;IACbC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BL,WAAW,CAACM,IAAI,KAAK;MACnB,GAAGA,IAAI;MACP,CAACD,CAAC,CAACE,MAAM,CAACC,IAAI,GAAGH,CAAC,CAACE,MAAM,CAACE;IAC5B,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOL,CAAC,IAAK;IAChCA,CAAC,CAACM,cAAc,CAAC,CAAC;IAClB,IAAId,SAAS,KAAK,KAAK,EAAE;MACf,IAAI;QACF,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;UACpEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAIjB,UAAU,EAAEF,QAAQ,CAACE,UAAU;YACpDC,UAAU,EAACH,QAAQ,CAACG,UAAU;YAC9BC,KAAK,EAAEJ,QAAQ,CAACI;UAAM,CAAC;QAC7B,CAAC,CAAC;QAEF,IAAIS,QAAQ,CAACO,EAAE,EAAE;UACfC,KAAK,CAAC,iCAAiC,CAAC;UACxC;UACAC,UAAU,CAAC,MAAMC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;QACpD;MACF,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,iBAAiB,EAAEF,GAAG,CAAC;MACvC;MACR;MACAC,OAAO,CAACE,GAAG,CAAC,YAAY,EAAE7B,QAAQ,CAAC;IACrC,CAAC,MAAM,IAAIF,SAAS,KAAK,QAAQ,EAAE;MACjC;MACA,IAAI;QACF,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0C,EAAE;UACvEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAGjB,UAAU,EAAEF,QAAQ,CAACE,UAAU;YACnDC,UAAU,EAACH,QAAQ,CAACG,UAAU;YAC9BC,KAAK,EAAEJ,QAAQ,CAACI;UAAM,CAAC;QAC7B,CAAC,CAAC;QAEF,IAAIS,QAAQ,CAACO,EAAE,EAAE;UACfC,KAAK,CAAC,6BAA6B,CAAC;UACpC;UACAC,UAAU,CAAC,MAAMC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;QACpD;MACF,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,iBAAiB,EAAEF,GAAG,CAAC;MACvC;MACAC,OAAO,CAACE,GAAG,CAAC,eAAe,EAAE7B,QAAQ,CAACE,UAAU,CAAC;IACnD,CAAC,MAAM,IAAIJ,SAAS,KAAK,QAAQ,EAAE;MACjC,IAAI;QACF,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0C,EAAE;UACvEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAGjB,UAAU,EAAEF,QAAQ,CAACE,UAAU;YACnDC,UAAU,EAACH,QAAQ,CAACG,UAAU;YAC9BC,KAAK,EAAEJ,QAAQ,CAACI;UAAM,CAAC;QAC7B,CAAC,CAAC;QAEF,IAAIS,QAAQ,CAACO,EAAE,EAAE;UACfC,KAAK,CAAC,6BAA6B,CAAC;UACpC;UACAC,UAAU,CAAC,MAAMC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;QACpD;MACF,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,iBAAiB,EAAEF,GAAG,CAAC;MACvC;MACA;MACAC,OAAO,CAACE,GAAG,CAAC,eAAe,EAAE7B,QAAQ,CAAC;IACxC;EACF,CAAC;EAED,oBACEP,OAAA;IAAKqC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BvC,OAAA;MAAAuC,QAAA,EAAI;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpC3C,OAAA;MAAKqC,KAAK,EAAE;QAAEO,OAAO,EAAE,MAAM;QAAEC,GAAG,EAAE,MAAM;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAP,QAAA,gBACjEvC,OAAA;QAAQ+C,OAAO,EAAEA,CAAA,KAAMzC,YAAY,CAAC,KAAK,CAAE;QAAAiC,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACpE3C,OAAA;QAAQ+C,OAAO,EAAEA,CAAA,KAAMzC,YAAY,CAAC,QAAQ,CAAE;QAAAiC,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1E3C,OAAA;QAAQ+C,OAAO,EAAEA,CAAA,KAAMzC,YAAY,CAAC,QAAQ,CAAE;QAAAiC,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CAAC,EAELtC,SAAS,iBACRL,OAAA;MAAMgD,QAAQ,EAAE9B,YAAa;MAACmB,KAAK,EAAE;QAAEO,OAAO,EAAE,MAAM;QAAEK,aAAa,EAAE,QAAQ;QAAEJ,GAAG,EAAE,MAAM;QAAEK,QAAQ,EAAE;MAAQ,CAAE;MAAAX,QAAA,gBAChHvC,OAAA;QAAAuC,QAAA,GAAO,SAEL,eAAAvC,OAAA;UACEmD,IAAI,EAAC,MAAM;UACXnC,IAAI,EAAC,YAAY;UACjBC,KAAK,EAAEV,QAAQ,CAACE,UAAW;UAC3B2C,QAAQ,EAAExC;UACX;QAAA;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACR3C,OAAA;QAAAuC,QAAA,GAAO,cAED,eAAAvC,OAAA;UACEmD,IAAI,EAAC,MAAM;UACXnC,IAAI,EAAC,YAAY;UACjBC,KAAK,EAAEV,QAAQ,CAACG,UAAW;UAC3B0C,QAAQ,EAAExC;UACb;QAAA;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,EAEX,CAACtC,SAAS,KAAK,KAAK,IAAIA,SAAS,KAAK,QAAQ,kBAC7CL,OAAA,CAAAE,SAAA;QAAAqC,QAAA,eAEEvC,OAAA;UAAAuC,QAAA,GAAO,QAEL,eAAAvC,OAAA;YACEmD,IAAI,EAAC,MAAM;YACXnC,IAAI,EAAC,OAAO;YACZC,KAAK,EAAEV,QAAQ,CAACI,KAAM;YACtByC,QAAQ,EAAExC,YAAa;YACvByC,QAAQ;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG;MAAC,gBAER,CACH,eAED3C,OAAA;QAAQmD,IAAI,EAAC,QAAQ;QAAAZ,QAAA,GAClBlC,SAAS,KAAK,KAAK,IAAI,iBAAiB,EACxCA,SAAS,KAAK,QAAQ,IAAI,oBAAoB,EAC9CA,SAAS,KAAK,QAAQ,IAAI,oBAAoB;MAAA;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAIV,CAAC;AAAAvC,EAAA,CA5IGD,WAAW;AAAAmD,EAAA,GAAXnD,WAAW;AAgJjB,eAAeA,WAAW;AAAA,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}